package org.lee.leetcode.num181_200;

import java.util.LinkedList;
import java.util.Queue;

public class LC200_NumIslands_BFS {

    public static int numIslands(char[][] grid) {
        int count = 0;
        Queue<int[]> queue = new LinkedList<>();
        for (int r = 0; r < grid.length; r++) {
            for (int c = 0; c < grid[0].length; c++) {
                if (grid[r][c] == '1') {
                    count++;
                    bfs(grid, r, c, queue);
                }
            }
        }
        return count;
    }

    private static void bfs(char[][] grid, int r, int c, Queue<int[]> queue) {
        queue.add(new int[] {r, c});
        while (!queue.isEmpty()) {
            int[] rc = queue.poll();
            int row = rc[0], col = rc[1];
            if (grid[row][col] == '1') {
                grid[row][col] = '2';
                int rowUp = row - 1;
                int rowDown = row + 1;
                int colLeft = col - 1;
                int colRight = col + 1;
                if (inArea(grid, rowUp, col))
                    queue.offer(new int[] {rowUp, col});
                if (inArea(grid, rowDown, col))
                    queue.offer(new int[] {rowDown, col});
                if (inArea(grid, row, colLeft))
                    queue.offer(new int[] {row, colLeft});
                if (inArea(grid, row, colRight))
                    queue.offer(new int[] {row, colRight});
            }
        }
    }

    private static boolean inArea(char[][] grid, int r, int c) {
        return r >= 0 && r < grid.length && c >= 0 && c < grid[0].length && grid[r][c] == '1';
    }

    public static void replace() {
        String str
        str = str.replace('[', '{');
        str = str.replace(']', '}');
        str = str.replace('"', '\'');
        System.out.println(str);
    }

    public static void testCase() {
        char[][] grid = {
                {'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},
                {'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},
                {'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},
                {'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},
                {'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
        };
        System.out.println(numIslands(grid));
    }

    public static void main(String[] args) {
        testCase();
    }

}
